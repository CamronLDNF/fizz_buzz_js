{\rtf1\ansi\ansicpg1252\cocoartf1671
{\fonttbl\f0\fswiss\fcharset0 Helvetica-Bold;\f1\fswiss\fcharset0 Helvetica;\f2\fswiss\fcharset0 Helvetica-Oblique;
\f3\fswiss\fcharset0 Helvetica-BoldOblique;}
{\colortbl;\red255\green255\blue255;\red251\green2\blue7;}
{\*\expandedcolortbl;;\cssrgb\c100000\c14913\c0;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\b\fs24 \cf0 Question 1. In your README to the best of your knowledge please explain what the following lines of code do:
\f1\b0 \
\

\f2\i let  fizzBuzz = fs.readFileSync('./src/js/fizz-buzz.js');\
\cb2 eval( fizzBuzz + `\\nexports.FizzBuzz = FizzBuzz;`)
\f1\i0 \cb1 \
\
\
The node 
\f2\i fs
\f1\i0  module provides an API for interacting with the file system. To use the module, one first adds:\
\

\f2\i const fs = require('fs');\

\f1\i0 \
With Node.js, there are two ways one can open and read files using the 
\f2\i fs
\f1\i0  module:\
\
\pard\tx220\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\li720\fi-720\pardirnatural\partightenfactor0
\ls1\ilvl0\cf0 {\listtext	\uc0\u8226 	}Load all of the contents at once (buffering)\
{\listtext	\uc0\u8226 	}Incrementally load contents (streaming)\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \

\f3\i\b fs.readFile
\f1\i0\b0  is the most common method runs asynchronously. This one should be used whenever possible to avoid blocking the main execution thread. \
\

\f3\i\b fs.readFileSync
\f1\i0\b0  method however runs synchronously (blocking). In other words, the file contents are returned directly from the function call and the execution thread is blocked while it loads the file. Best practice is to use this in start-up sections of the program (like when we're loading config files) or in command-line apps where blocking the main thread isn't a big deal.\
\
Reference {\field{\*\fldinst{HYPERLINK "https://stackabuse.com/read-files-with-node-js/"}}{\fldrslt here}}.\
\

\f0\b Question 2. In your README to the best of your knowledge please explain why we are placing the\
\

\f2\i\b0 let fizzBuzz = new FizzBuzz\

\f0\i0\b \
outside the it block?
\f1\b0 \
\
To create a new instance of the FizzBuzz class.
\f0\b \
}